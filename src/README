amitat.turkel , yschwartz23
314632878,318343654

3.4.4.1
אנו החלטנו לממש את הורדת המלבנים על ידי שליחת המופע של "brickmanger" לאסטרטגיה
"BasicCollisionStrategy"
1.7:
היתרונות הם: האחראי היחידי לשינוי האובייקטים הוא מנהל המשחק בלבד,כלומר כל שינוי חייב להעשות
על ידי שימוש במתודות שלו,דבר זה מאפשר אניקפסולסיה,ונותן לנו לשלוט באופן
 מבוקר על היכן מתבצעת הוספת אבייקטים ,על ידי שימוש בעיקרון ההכלה שלמדנו.
בנוסף,דבר זה מצמצם את הקוד אצל האסטרטגיה, ומצמצם את הAPI שלו כיוון שהאסטרטגיה עצמה הייתה צריכה לממש
את הוספת האובייקט ויתכן על ידי שימוש בפונקציות נוספות.
חסרונות: שבירת אינקפסולציה, מבחינת עיצוב, אנו לא רוצים שאסטרטגיה של לבנה תחזיק בתוכה את כל מנהל המשחק
דבר זה עלול לגרום לכך שישתנו דברים במנהל המשחק בכל חלקי הקוד שלנו,דבר שיכול לגרום לנו חסרונות בהמשך
בנוסף, האסטרטגיה אינה צריכה את כל מנהל המשחק, אלא רק שימוש בחלק קטן ממנו, ואנו נאלצנו להביא לה את כל
המנהל

3.4.4.2
הוספנו שני חלקות, "NumericLife,"GraphicLife"
NumericLIfe:
מחלקה זו מקבלת מופע של מנהל המשחק, על בסיס אותו עיקרון עיצוב אשר התשמשנו בסעיף הקודם, מטרת מחלקה זו
היא לבקש ממנהל המשחק לשנות את העיצוב הגרפי המסמל את החיים על פי הערכים שהיא מחזיקה ומעדכנת לאורך המשחק.
כלומר מחלקה זו אחראית על הניהול בלבד של מתי לבקש ממנהל המשחק לשנות דברים ולמה לשנות
GraphicLife:
מחלקה זו גם מקבלת מופע של מנהל המשחק, גם כאן על בסיס אותו עיקרון עיצוב אשר ראינו בסעיף הקודם, מחלקה זו
אחראית בנוסף על ייצור של אובייקטים המסמלים את הלבבות, היא אחראית על כיצד ליצר אותם,על כמותם,ועל מיקומם.
בנוסף היא אחראית על הלוגיקה של מתי לבקש ממנהל המשחק להוסיף ולהסיר לב במיקום הנכון בזמן הנכון. נשים לב
כי על מנת לשמור על מודולריות שני המחלקות אינם תלויות זו בזו, והלוגיקה שלהם אינה משותפת.

3.4.4.3
 אסטרטגיה בסיסית
 - מחלקת אב המחזיקה מנהל המשחק, וקוראת לו להסיר לבנה בעת הצורך הממשת את הממשק אסטרטגית התנגשות

"CameraStrategy"
יורשת מאסטרטגיה בסיסית
 , בעת התנגשות מפעילה בתנאים הנכונים את המצלמה, וקוראת לתוכנית ההתנגשות של אסטרטגיה בסיסית

 "FallingHeartStrategy"
 יורשת מאסטרטגיה בסיסית
 ובעת התנגשות  קוראה למנהל המשחק להוסיף לב, לאחר מכן ממשיכה עם האסטרטגיה של הבסיסית

 "PaddleStrategy"
 יורשת מאסטרטגיה בסיסית
  ובעת התנגשות  קוראה למנהל המשחק להוסיף פדל, לאחר מכן ממשיכה עם האסטרטגיה של הבסיסית

  "PuckStrategy"
   יורשת מאסטרטגיה בסיסית
   ובעת התנגשות  קוראה למנהל המשחק להוסיף פק, לאחר מכן ממשיכה עם האסטרטגיה של הבסיסית

   3.4.4.4
   ממשנו התנהגות כפולה על ידי יצירת מחלקה, המחזיקה שני התנהגויות, אשר כל אחד מהם יכולה גם להיות התנהגות
   כפולה, ובעת ההתנגשות היא מפעילה את שני ההתנהגיות הללו, כעת יצרנו שני מתודות, אחד יוצרת 1 מתוך החמש
   התנהגויות בהתפלגות שווה, והשניה אחד מתוך 4, לא כולל ההתנהגות הכפולה.
   אופן המניעה לבחירת של יותר מהתנהגיות הועבר על ידי counter אשר ספר לנו את מספר ההתנהגיות הכפולות
   שנקראו מההתחלה, על ידי עידכון הcounter ובדיקתו ידענו מתי נבחרו כבר מספר ההתנהגיות הכפולות המקסימלי,
   וכאשר זה קרה קראנו לפונקציה הבוחרת אחד מתוך 4 התנהגויות עבור ההתנהגות הבא,בין אם זה עבור התנהגות אחת
   של אסטרטגיה רגילה לבין לבחור פעמיים עבור שני השדות של התנהגות כפולה.
   לכן באופן זה כאשר אנו מפיעלים את התנהגות כפולה היא קוראת באופן ריקורסיבי למתודות התנגשות של השדות
   שהיא מחזיקה, והם במידת הצורך קוראות רקורסיבית לשדות שלהם,אם הם התנהגות כפולה, כאשר מספר
    הקודקודים בעץ הרקורסיה מוגבל על ידי הcounter

    3.4.4.5

